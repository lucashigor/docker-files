version: "3.9"
services:
  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=P@55w0rd
      - POSTGRES_DB=keycloak
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
        - adasit

  keycloak:
    container_name: custom_keycloak
    image: quay.io/keycloak/keycloak:21.1.1
    restart: unless-stopped
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=P@55w0rd
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak?user=postgres&password=P@55w0rd&sslmode=disable&sslfactory=org.postgresql.ssl.DefaultJavaSSLFactory
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_PROXY=edge
    ports:
      - '8080:8080'
    command:
      - start-dev --import-realm
    networks:
        - adasit

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
        - adasit
  
  tempo:
    image: grafana/tempo:latest
    restart: unless-stopped
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"   # tempo
      - "4317"  # otlp grpc
    networks:
        - adasit

  loki:
    image: grafana/loki:2.9.4
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
        - adasit

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 9002:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=P@55w0rd
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
        - adasit

  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    restart: unless-stopped
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "8889:8889"   # Prometheus exporter metrics
      - "4318:4318"   # OTLP gRPC receiver
      - "4317:4317"   # OTLP gRPC receiver
    networks:
        - adasit

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    restart: unless-stopped
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - adasit

volumes:
  prom_data:
  tempo_data:
  postgres_data:

networks:
  adasit:
    driver: bridge